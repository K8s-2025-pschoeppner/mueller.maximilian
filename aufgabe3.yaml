---
# Blue Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-webserver-blue
  namespace: mueller-maximilian
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-webserver
      version: blue
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: nginx-webserver
        version: blue
    spec:
      serviceAccountName: nginx-service-account
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - nginx-webserver
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: nginx
        image: nginx:stable
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
        volumeMounts:
        - name: web-content
          mountPath: /usr/share/nginx/html/
      volumes:
      - name: web-content
        configMap:
          name: web-content
---
# Green Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-webserver-green
  namespace: mueller-maximilian
spec:
  replicas: 0  # (inactive)
  selector:
    matchLabels:
      app: nginx-webserver
      version: green
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: nginx-webserver
        version: green
    spec:
      serviceAccountName: nginx-service-account
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - nginx-webserver
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: nginx
        image: nginx:stable
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
        volumeMounts:
        - name: web-content
          mountPath: /usr/share/nginx/html/
      volumes:
      - name: web-content
        configMap:
          name: web-content
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-webserver-service
  namespace: mueller-maximilian
spec:
  selector:
    app: nginx-webserver
    version: blue  
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-webserver-ingress
  namespace: mueller-maximilian
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: muellerm.k8s.schoeppi5.de
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-webserver-service
            port:
              number: 80